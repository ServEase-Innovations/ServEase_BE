name: CI/CD for Service Provider

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '17'

    - name: Build with Maven
      run: mvn clean package

    - name: Archive production artifacts
      uses: actions/upload-artifact@v4
      with:
        name: packaged-application
        path: target/*.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: packaged-application
        path: target/

    - name: Setup SSH key
      id: setup-key
      env:
        DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
      run: |
        echo "$DEPLOY_KEY" > $HOME/key.pem
        chmod 400 $HOME/key.pem
        ls -l $HOME/key.pem  # Debug step to verify key permissions

    - name: Deploy the application and update Nginx
      run: |
        ssh -vvv -o StrictHostKeyChecking=no -i $HOME/key.pem ubuntu@${{ secrets.DEPLOY_HOST }} << 'EOF'
          # Ensure Java is installed
          if ! command -v java &> /dev/null
          then
            echo "Java not found, installing..."
            sudo apt update
            sudo apt install -y openjdk-17-jre-headless
          fi

          # Change to the directory where the JAR file is located
          cd /home/ubuntu/deployment/target/

          # Run the application using nohup
          nohup java -jar springboot-first-app-0.0.1-SNAPSHOT.jar > /home/ubuntu/deployment/application.log 2>&1 &

          # Ensure that nginx-config is available on the server
          if [ ! -f "/home/ubuntu/deployment/nginx-config" ]; then
            echo "nginx-config file not found on the server!"
            exit 1
          fi

          # Copy the nginx-config to the Nginx sites-available directory
          sudo cp /home/ubuntu/deployment/nginx-config /etc/nginx/sites-available/default

          # Test Nginx configuration for syntax errors
          sudo nginx -t

          # Reload Nginx to apply changes
          sudo systemctl reload nginx

          # Restart the necessary services
          sudo systemctl restart helloworld
        EOF
