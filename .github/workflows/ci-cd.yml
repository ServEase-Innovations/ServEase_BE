name: CI/CD for Service Provider

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '17'

    - name: Build with Maven
      run: mvn clean package

    - name: Archive production artifacts
      uses: actions/upload-artifact@v3
      with:
        name: packaged-application
        path: target/*.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: packaged-application
        path: target/

    - name: Setup key
      id: setup-key
      env:
        DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
      run: |
        echo "$DEPLOY_KEY" > $HOME/key.pem
        chmod 400 $HOME/key.pem
        ls -l $HOME/key.pem  # Debug step to verify key permissions

    - name: Copy JAR to EC2
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        username: ubuntu
        key: ${{ secrets.DEPLOY_KEY }}
        source: "target/*.jar"
        target: "/home/ubuntu/deployment/target/"

    - name: List files in the current directory
      run: |
        ls -alh
      shell: /usr/bin/bash -e {0}

    - name: List contents of the repository
      run: |
        ls -R
      shell: /usr/bin/bash -e {0}

    - name: Copy Nginx config to server
      run: |
        if [ -f "./nginx-config" ]; then
          echo "Copying nginx-config to the server..."
          scp -i $HOME/key.pem ./nginx/nginx-config ubuntu@${{ secrets.DEPLOY_HOST }}:/home/ubuntu/deployment/nginx-config
        else
          echo "nginx-config file not found!"
          exit 1
        fi
      shell: /usr/bin/bash -e {0}

    - name: Restart Nginx and Spring Boot app
      run: |
        ssh -o StrictHostKeyChecking=no -i $HOME/key.pem ubuntu@${{ secrets.DEPLOY_HOST }} << 'EOF'
          sudo cp /home/ubuntu/deployment/nginx-config /etc/nginx/sites-available/default
          sudo nginx -t
          sudo systemctl reload nginx
          sudo systemctl restart helloworld
        EOF
