name: CI/CD for Service Provider

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '17'

    - name: Build with Maven
      run: mvn clean package

    - name: Archive production artifacts
      uses: actions/upload-artifact@v3
      with:
        name: packaged-application
        path: target/*.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: packaged-application
        path: target/

    - name: Setup SSH Key
      id: setup-key
      env:
        DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
      run: |
        echo "$DEPLOY_KEY" > $HOME/key.pem
        chmod 400 $HOME/key.pem
        ls -l $HOME/key.pem  # Debug step to verify key permissions

    - name: Copy JAR to EC2
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        username: ubuntu
        key: ${{ secrets.DEPLOY_KEY }}
        source: "target/*.jar"
        target: "/home/ubuntu/deployment/target/"

    - name: Copy Nginx Config to EC2
      run: |
        # Ensure the nginx config file exists before copying it
        if [ -f "./nginx-config" ]; then
          scp -i $HOME/key.pem ./nginx-config ubuntu@${{ secrets.DEPLOY_HOST }}:/home/ubuntu/deployment/nginx-config
        else
          echo "nginx-config file not found!"
          exit 1
        fi

    - name: Install Nginx and Java on EC2
      run: |
        ssh -i $HOME/key.pem ubuntu@${{ secrets.DEPLOY_HOST }} << 'EOF'
          # Ensure Java is installed
          if ! command -v java &> /dev/null
          then
            echo "Java not found, installing..."
            sudo apt update
            sudo apt install -y openjdk-17-jre-headless
          fi
          
          # Install Nginx if not installed
          if ! command -v nginx &> /dev/null
          then
            echo "Nginx not found, installing..."
            sudo apt install -y nginx
          fi

          # Ensure Nginx is running
          sudo systemctl start nginx
          sudo systemctl enable nginx

          # Copy Nginx config file and restart Nginx
          sudo cp /home/ubuntu/deployment/nginx-config /etc/nginx/sites-available/your-app.conf
          sudo ln -s /etc/nginx/sites-available/your-app.conf /etc/nginx/sites-enabled/
          sudo nginx -t  # Test Nginx configuration
          sudo systemctl reload nginx  # Reload Nginx

          # Change to the directory where the JAR file is located and run the application
          cd /home/ubuntu/deployment/target/

          # Run the Spring Boot application with nohup (to run in the background)
          nohup java -jar springboot-first-app-0.0.1-SNAPSHOT.jar > /home/ubuntu/deployment/application.log 2>&1 &

          # Optional: Restart any other necessary services (e.g., your Java service, etc.)
          sudo systemctl restart helloworld  # If needed for other services
        EOF
